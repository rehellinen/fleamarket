api文档介绍
1. 关于URL参数
:version表示版本号，目前版本号为v1

2. 返回的数据结构
[
    'status' => 10000
    'message' => '成功'
    'data' => [],
    'request_url' => ''
]

3. scope
scope代表作用域，默认为所有用户都能访问
检查API：目前到23
TODO: 6 HTTP方式改为PUT

以下为详细的API
1. 获取banner信息
get     api/:version/banner

2. 检查商品信息是否更改
get     api/:version/goods/check
params:
(1) ids   示例：ids=1|2|3

3. 根据分类获取商品
get     api/:version/goods/category/:id
URL params: id为分类ID

4. 获取下架的商品
get     api/:version/goods/downed
scope   seller / shop

5. 添加商品
post    api/:version/goods
scope   seller / shop
params:
(1) name   商品名字
(2) price   商品价格
(3) quantity   商品数量
(4) description   商品描述（目前只支持纯文字）
(5) image_id   图片的ID
(6) subtitle   商品副标题
(7) listorder   商品的排序（商品越大越展示在前面）

6. 上架 / 下架商品
post    api/:version/goods/status
scope   seller / shop
params:
(1) id   商品ID
(2) status   商品状态，1为上架，0为下架

7. 修改商品信息
put     api/:version/goods
scope   seller / shop
params:
(1) name   商品名字
(2) price   商品价格
(3) quantity   商品数量
(4) description   商品描述（目前只支持纯文字）
(5) image_id   图片的ID
(6) subtitle   商品副标题
(7) listorder   商品的排序（商品越大越展示在前面）
(8) id   商品ID

8. 获取所有自营商品
get     api/:version/newGoods

9. 获取首页推荐的自营商品
get     api/:version/newGoods/index

10. 获取自营商品的详情
get     api/:version/newGoods/:id
URL params: id为商品ID

11. 根据商店ID获取所有商品
get     api/:version/newGoods/shop/:id
URL params: id为商店ID

12. 根据商店ID获取最近新品
get     api/:version/newGoods/recent/shop/:id
URL params: id为商店ID

13. 获取所有二手商品
get     api/:version/oldGoods

14. 获取首页推荐的二手商品
get     api/:version/oldGoods/index

15. 获取二手商品的详情
get     api/:version/oldGoods/:id
URL params: id为商品ID

16. 根据二手卖家ID获取所有商品
get     api/:version/oldGoods/seller/:id
URL params: id为二手卖家ID

17. 获取所有主题
get     api/:version/theme

18. 根据主题ID获取分类
get     api/:version/category/:id
URL params: id为主题ID

19. 买家获取Token
post    api/:version/token/buyer
params:
(1) code   小程序端获取的code码

20. 二手卖家 / 自营商家获取Token
post    api/:version/token/seller
params:
(1) code   小程序端获取的code码

21. 检查Token是否过期
post    api/:version/token/verify
params:
(1) token   Token令牌

22. 检查openID是否存在
post    api/:version/token/openID
params:
(1) code   小程序端获取的code码

23. 买家修改个人信息
put     api/:version/buyer
scope   buyer
params:
(1) name   姓名
(2) telephone   电话
(3) weixin   微信号
(4) dormitory   宿舍号
(5) number   学号
(6) email   邮箱

24. 买家获取个人信息
get     api/:version/buyer
scope   buyer

25. 获取所有自营商店
get     api/:version/shop

25. 获取自营商店详细信息
get     api/:version/shop/:id
URL params: id为商店ID

26. 添加 / 修改自营商店
post    api/:version/shop
scope   shop / seller
params:
(1) name   名称
(2) number   学号
(3) telephone   电话
(4) weixin   微信
(5) dormitory   宿舍
(6) email   邮箱
(7) zhifubao  支付宝
(8) code   小程序端获取的code码
(8) major   主营

27. 获取二手卖家的信息
get     api/:version/seller/:id
URL params: id为二手卖家ID

28. 添加 / 修改二手卖家
post    api/:version/seller
params:
(1) name   名称
(2) number   学号
(3) telephone   电话
(4) weixin   微信
(5) dormitory   宿舍
(6) email   邮箱
(7) zhifubao  支付宝
(8) code   小程序端获取的code码
(8) major   主营

29. 根据订单状态获取订单
get     api/:version/order/:status
scope   buyer / seller / shop
URL params: status为订单状态
-2 => COMPLETED, WITHDRAWING, WITHDRAWN
0 => UNPAID, PAID, DELIVERED, COMPLETED
1 => UNPAID
2 => PAID
3 => DELIVERED
4 => COMPLETED

30. 获取订单详情
get     api/:version/order/:id/:type
scope   buyer / seller / shop
URL params: id为订单ID，type为订单中商品类型（1为新，2为旧）

31. 获取订单总价格（用于商家版小程序）
get     api/:version/order/price
scope   shop / seller

32. 下单
post    api/:version/order
scope   buyer
params:
(1) goods
类似于
[
    ['goods_id' => 13, count => 1],
    ['goods_id' => 8, count => 5]
]

33. 商家发货
post    api/:version/order/deliver/:id
scope   seller / shop
URL params: id为订单ID

34. 确认收货
post    api/:version/order/confirm/:id
scope   buyer
URL params: id为订单ID

35. 发起提现
post    api/:version/order/withdraw/:id
scope   seller / shop
URL params: id为订单ID

36. 删除订单
delete  api/:version/order/:id
scope   buyer
URL params: id为订单ID

37. 获取预订单
post    api/:version/preOrder
params:
(1) order_identify   订单号或者订单ID
注：订单号可能对应多个订单，而订单ID唯一

38. 接收微信回调
post    api/:version/notify

39. 获取小程序码
get     api/:version/qr